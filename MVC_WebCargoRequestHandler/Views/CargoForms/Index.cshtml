@*@model IEnumerable<MVC_WebCargoRequestHandler.Models.CargoForm>*@
@model PagedList.IPagedList<MVC_WebCargoRequestHandler.Models.CargoForm>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*<link href="~/Content/Test.css" rel="stylesheet" type="text/css" />*@
@{
    ViewBag.Title = "Carriage Forms";
}
<br />
<p>
    @Html.ActionLink("Создать новую запись", "Create", null, new { @class = "btn btn-primary" })
</p>

@using (Html.BeginForm())
{
    <div class="col-lg-4">
        <div class="input-group">
            <input type="search" class="form-control" id="searchString" name="searchString" placeholder="Заказчик или способ связи" />
            <span class="input-group-btn">
                <button class="btn btn-default" type="submit">Поиск</button>
            </span>
        </div>
        <br />
    </div>
}
<table class="table table-hover testColumnWidth">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model[0].ReceiptDate).ToHtmlString(), "Index", new { sortOrder = ViewBag.ReceiptDateSortParm })
        </th>
        <th>
            @Html.ActionLink("Способ связи", "Index", new { sortOrder = ViewBag.CommunicationIDSortParm })
        </th>
        <th>
            @Html.ActionLink("Заказчик", "Index", new { sortOrder = ViewBag.CustomerSortParm })
        </th>
        <th>
            @Html.ActionLink("Описание груза", "Index", new { sortOrder = ViewBag.CargoDescriptionSortParm })
        </th>
        <th>
            @Html.ActionLink("ГНГ/ЕТСНГ", "Index", new { sortOrder = ViewBag.CargoCodeSortParm })
        </th>
        <th>
            @Html.ActionLink("Станция отправления", "Index", new { sortOrder = ViewBag.DepartureSortParm })
        </th>
        <th>
            @Html.ActionLink("Место назначения", "Index", new { sortOrder = ViewBag.DestinationSortParm })
        </th>
        <th>
            @Html.ActionLink("Направление", "Index", new { sortOrder = ViewBag.DirectionSortParm })
        </th>
        <th>
            @Html.ActionLink("Тип ПС", "Index", new { sortOrder = ViewBag.RollingStockNameSortParm })
        </th>
        <th>
            @Html.ActionLink("Стоимость", "Index", new { sortOrder = ViewBag.CostSortParm })
        </th>
        <th>
            @Html.ActionLink("Валюта", "Index", new { sortOrder = ViewBag.CurrencySortParm })
        </th>
        <th>
            @Html.ActionLink("Вид сообщения", "Index", new { sortOrder = ViewBag.TrafficClassificationSortParm })
        </th>
        <th>
            @Html.ActionLink("Дата ответа", "Index", new { sortOrder = ViewBag.ResponseDateSortParm })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ReceiptDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CommunicationMethod.CommunicationName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CargoDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CargoCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Departure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Destination)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Direction.DirectionName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RollingStockType.RollingStockName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Currencies.CurrencyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TrafficClassification.TrafficClassificationName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ResponseDate)
            </td>
            @*<td>
                <div class="btn-group-xs" role="rowgroup" aria-label="Basic example">
                    <button type="button" class="btn btn-default" data-toggle="tooltip" title="Отредактировать запись" onclick="location.href='@Url.Action("Edit", new { id = item.CargoFormID })'">  Правка </button>
                    <button type="button" class="btn btn-default" data-toggle="tooltip" title="Создать такую же запись" onclick="location.href='@Url.Action("Clone", new { id = item.CargoFormID })'">  Дублировать </button>
                    <button type="button" class="btn btn-default" data-toggle="tooltip" title="Подробности" onclick="location.href='@Url.Action("Details", new { id = item.CargoFormID })'">  Подробнее </button>
                    <button type="button" class="btn btn-default" data-toggle="tooltip" title="Удалить запись" onclick="location.href='@Url.Action("Delete", new { id = item.CargoFormID })'">  Удалить </button>
                </div>
                @Html.ActionLink("Удалить", "Delete", new { id = item.CargoFormID }, new { @class = "glyphicon glyphicon-trash" })

            </td>*@
            <td>
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Действия
                    </button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="@Url.Action("Edit", new { id = item.CargoFormID })">Редактировать</a>
                        <a class="dropdown-item" href="@Url.Action("Clone", new { id = item.CargoFormID })">Дублировать</a>
                        <a class="dropdown-item" href="@Url.Action("Details", new { id = item.CargoFormID })">Подробнее</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="@Url.Action("Delete", new { id = item.CargoFormID })">Удалить</a>

                    </div>
                </div>
            </td>
        </tr>
    }

</table>

        Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
