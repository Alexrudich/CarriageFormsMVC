<form>
    <div style="margin-top: 20px;">
        <p> Заказчик:</p>
        <select class="filter-select" column="Customer" style="width: 200px"></select> @*<span>Заказчик</span>*@
    </div>
    <div style="margin-top: 10px; ">
        <p> Станция отправления:</p>
        <select class="filter-select" column="Departure" style="width: 200px"></select> @*<span>Станция отправления </span>*@
    </div>
    <div style="margin-top: 10px; ">
        <p> Станция назначения:</p>
        <select class="filter-select" column="Destination" style="width: 200px"></select>  @*<span>Станция назначения </span>*@
    </div>
    <div style="margin-top: 10px; ">
        <p> ГНГ/ЕТСНГ:</p>
        <select class="filter-select" column="CargoCode" style="width: 200px"></select>   @*<span>ГНГ/ЕТСНГ </span>*@
    </div>
    <div style="margin-top: 10px; margin-bottom: 20px">
        <p>Описание груза:</p>
        <select class="filter-select" column="CargoDescription" style="width: 200px"></select> @*<span>Описание груза </span>*@
    </div>
    <input type="button" id="getResult" value="Найти" class="btn btn-primary" />
    <br />
    <div id="results"> 
    </div>
</form>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var selects = $('.filter-select').select2({
                ajax: {
                    type: 'POST',
                    url: '/ReportGenerator/GetFilteredResult',
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.value,
                                    id: item.value
                                }
                            })
                        };
                    },
                    data: function (params) {
                        var that = this;
                        params.filters = JSON.parse(JSON.stringify(filters));
                        var existingFilter = params.filters.find(function (filter) {
                            return filter.column === $(that).attr('column');
                        });
                        if (existingFilter) {
                            existingFilter.value = params.term;
                            existingFilter.editing = true;
                        } else {
                            params.filters.push({ column: $(this).attr('column'), value: params.term, editing: true });
                        }
                        return { filters: params.filters };
                    },
                    dataType: 'json'
                },
                allowClear: true,
                placeholder: 'Введите фильтр',
                minimumInputLength: 2,
                language: {
                    inputTooShort: function (args) {
                        var remainingChars = args.minimum - args.input.length;
                        var message = 'Пожалуйста введите ' + remainingChars + ' или более символов';
                        return message;
                    },
                    noResults: function () {
                        return 'Ничего не найдено';
                    },
                    loadingMore: function () {
                        return 'Подгружаем результаты...';
                    },
                    searching: function () {
                        return 'Ищем в базе…';
                    }
                }
            });

            var filters = [];

            selects.on('select2:select', function (e) {
                
                var that = this;
                var existingFilter = filters.find(function (filter) {
                    return filter.column === $(that).attr('column');
                });
                if (existingFilter) {
                    existingFilter.value = $(this).val();
                } else {
                    filters.push({ column: $(this).attr('column'), value: $(this).val() });
                }
            });

            selects.on('select2:unselect', function (e) {
                for (var i = filters.length - 1; i >= 0; --i) {
                    if (filters[i].column == $(this).attr('column')) {
                        filters.splice(i, 1);
                    }
                }
            })

            $('#getResult').click(function () {
                $.ajax({
                    type: 'POST',
                    dataType: 'html',
                    url: '/ReportGenerator/GetResultsPartialView',
                    data: { filters : filters},
                    success: function (res, textStatus, jqXHR) {
                        $("#results").html(res);
                    }
                });
            });

            $('#btnExport').click(function () {
                $.ajax({
                    type: 'POST',
                    url: '/ReportGenerator/ExportToExcel',
                    data: { filters: filters },
                    success: function (res, textStatus, jqXHR) {
                        console.log('done!');
                    }
                });
            });
        });
        //function openNav() {
        //    document.getElementById("mySidenav").style.width = "250px";
        //    document.getElementById("main").style.marginLeft = "250px";
        //    document.body.style.backgroundColor = "rgba(0,0,0,0.4)";
        //}

        //function closeNav() {
        //    document.getElementById("mySidenav").style.width = "0";
        //    document.getElementById("main").style.marginLeft = "0";
        //    document.body.style.backgroundColor = "white";
        //}
    </script>

}
